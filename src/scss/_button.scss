// Button

// TODO: Get rid of the line-height and use padding instead! Mind the form-control

@mixin btn-mix($bg, $border-color, $color) {
  background: $bg;
  border: $btn-border-width solid $border-color;
  color: $color;
}

@mixin btn-hover($bg, $border-color, $color) {
  &:not(.disabled):not([disabled]):hover {
    background: $bg;
    border-color: $border-color;
    color: $color;
    text-decoration: none; // Inside hover to disable underline on <a> tags
  }
}

@mixin btn-active($bg, $border-color) {
  &:not(.disabled):not([disabled]):active {
    background: $bg;
    border-color: $border-color;
  }
}

@mixin btn-focus($outline) {
  &:not(.disabled):not([disabled]):focus {
    box-shadow: 0 0 0 2px $outline;
  }
}

@mixin btn-size($font-size, $line-height, $padding-x) {
  font-size: $font-size;
  font-weight: $btn-font-weight;
  line-height: $line-height;
  padding: 0 $padding-x;
}

.btn {
  display: inline-block; // Align the buttons with the rest of the components !important
  cursor: pointer;
  font-weight: $btn-font-weight;
  outline: none;

  // In case of material ripple effect feature
  overflow: hidden;
  position: relative;

  text-align: center;
  //text-transform: uppercase;
  transition: background .25s, border .25s, box-shadow .25s, color .25s;
  user-select: none; // Prevent highlighting the text inside the buttons
  vertical-align: middle;
  white-space: nowrap; // Prevent from wrapping or placing text on a new line

  @include border-radius($border-radius);
  @include btn-size($btn-font-size, $btn-height, $btn-padding-x);

  // theme-colors
  @each $key, $value in $theme-colors {

    $color: $sasha-white;

    &-#{$key} {
      @include btn-mix($value, $value, $color);
      @include btn-hover(lighten($value, 5%), lighten($value, 5%), $color);
      @include btn-active(darken($value, 10%), darken($value, 10%));
      @include btn-focus(lighten($value, 10%));
    }

    @if ($enable-btn-o) {
      &-#{$key}-o {
        @include btn-mix(none, $value, $value);
        @include btn-hover($value, $value, $color);
        @include btn-active(darken($value, 10%), darken($value, 10%));
        @include btn-focus(lighten($value, 10%));
      }
    }
  }

  // theme-sasha-btn
  @each $key, $value in $theme-sasha-custom {

    $bg-hover: if($key == sasha-darkest, lighten($value, 10%), darken($value, 10%));
    $color: if($key == sasha-darkest, $sasha-greyest, $sasha-darker);
    $outline: if($key == sasha-darkest, lighten($value, 10%), darken($value, 10%));

    &-#{$key} {
      @include btn-mix($value, $value, $color);
      @include btn-hover($bg-hover, $bg-hover, $color);
      @include btn-active(darken($value, 5%), darken($value, 5%));
      @include btn-focus($outline);
    }

    @if ($enable-btn-o) {
      &-#{$key}-o {
        @include btn-mix(none, $value, $value);
        @include btn-hover($value, $value, $color);
        @include btn-active(darken($value, 5%), darken($value, 5%));
        @include btn-focus($outline);
      }
    }
  }

  &-sm {
    @include btn-size($btn-font-size-sm, $btn-height-sm, $btn-padding-x-sm);
  }

  &-lg {
    @include btn-size($btn-font-size-lg, $btn-height-lg, $btn-padding-x-lg);
  }

  &-block {
    display: block;
    width: 100%;
    box-sizing: border-box;
  }

  // Give space to multiple block buttons
  &-block + &-block {
    margin-top: $btn-block-margin-y;
  }

  &.disabled,
  &:disabled {
    cursor: default;
    opacity: .5;
  }
}

// Disable click event on <a> elements
a.btn.disabled,
fieldset[disabled] a.btn {
  pointer-events: none;
}

// Ensure that block buttons will work
input[type='submit'],
input[type='reset'],
input[type='button'] {
  &.btn-block {
    width: 100%;
  }
}
